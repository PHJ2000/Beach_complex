spring:
  application:
    name: beach-complex
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/beach_complex}
    username: ${SPRING_DATASOURCE_USERNAME:beach}
    password: ${SPRING_DATASOURCE_PASSWORD:beach}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
  cache:
    type: simple
  data:
    redis:
      repositories:
        enabled: false
  redis:
    host: ${SPRING_REDIS_HOST:localhost}
    port: ${SPRING_REDIS_PORT:6379}
  jackson:
    serialization:
      write-dates-as-timestamps: false
  mvc:
    problemdetails:
      enabled: true

server:
  port: ${SERVER_PORT:8080}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      probes:
        enabled: true
  server:
    port: ${MANAGEMENT_SERVER_PORT:8081}

logging:
  level:
    org.springframework.security: INFO
    org.hibernate.SQL: WARN

springdoc:
  api-docs:
    path: /api/docs
  swagger-ui:
    path: /swagger-ui.html

app:
  cache:
    ttl-minutes: 30
  telemetry:
    lookback-hours: 24
  # TODO: Externalize telemetry endpoints to configuration server when available.
